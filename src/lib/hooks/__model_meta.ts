/******************************************************************************
 * This file was generated by ZenStack CLI.
 ******************************************************************************/

/* eslint-disable */
// @ts-nocheck

const metadata = {
    models: {
        account: {
            name: 'Account', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                }, accountId: {
                    name: "accountId",
                    type: "String",
                }, providerId: {
                    name: "providerId",
                    type: "String",
                }, userId: {
                    name: "userId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'user',
                }, user: {
                    name: "user",
                    type: "User",
                    isDataModel: true,
                    backLink: 'accounts',
                    isRelationOwner: true,
                    onDeleteAction: 'Cascade',
                    foreignKeyMapping: { "id": "userId" },
                }, accessToken: {
                    name: "accessToken",
                    type: "String",
                    isOptional: true,
                }, refreshToken: {
                    name: "refreshToken",
                    type: "String",
                    isOptional: true,
                }, idToken: {
                    name: "idToken",
                    type: "String",
                    isOptional: true,
                }, accessTokenExpiresAt: {
                    name: "accessTokenExpiresAt",
                    type: "DateTime",
                    isOptional: true,
                }, refreshTokenExpiresAt: {
                    name: "refreshTokenExpiresAt",
                    type: "DateTime",
                    isOptional: true,
                }, scope: {
                    name: "scope",
                    type: "String",
                    isOptional: true,
                }, password: {
                    name: "password",
                    type: "String",
                    isOptional: true,
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                },
            },
        },
        session: {
            name: 'Session', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                }, expiresAt: {
                    name: "expiresAt",
                    type: "DateTime",
                }, token: {
                    name: "token",
                    type: "String",
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                }, ipAddress: {
                    name: "ipAddress",
                    type: "String",
                    isOptional: true,
                }, userAgent: {
                    name: "userAgent",
                    type: "String",
                    isOptional: true,
                }, userId: {
                    name: "userId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'user',
                }, user: {
                    name: "user",
                    type: "User",
                    isDataModel: true,
                    backLink: 'sessions',
                    isRelationOwner: true,
                    onDeleteAction: 'Cascade',
                    foreignKeyMapping: { "id": "userId" },
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, token: {
                    name: "token",
                    fields: ["token"]
                },
            },
        },
        user: {
            name: 'User', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                }, name: {
                    name: "name",
                    type: "String",
                }, email: {
                    name: "email",
                    type: "String",
                }, emailVerified: {
                    name: "emailVerified",
                    type: "Boolean",
                }, image: {
                    name: "image",
                    type: "String",
                    isOptional: true,
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                }, sessions: {
                    name: "sessions",
                    type: "Session",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'user',
                }, accounts: {
                    name: "accounts",
                    type: "Account",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'user',
                }, articles: {
                    name: "articles",
                    type: "Article",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'author',
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, email: {
                    name: "email",
                    fields: ["email"]
                },
            },
        },
        verificationToken: {
            name: 'VerificationToken', fields: {
                identifier: {
                    name: "identifier",
                    type: "String",
                }, token: {
                    name: "token",
                    type: "String",
                    isId: true,
                }, expires: {
                    name: "expires",
                    type: "DateTime",
                },
            }, uniqueConstraints: {
                token: {
                    name: "token",
                    fields: ["token"]
                }, identifier_token: {
                    name: "identifier_token",
                    fields: ["identifier", "token"]
                },
            },
        },
        verification: {
            name: 'Verification', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                }, identifier: {
                    name: "identifier",
                    type: "String",
                }, value: {
                    name: "value",
                    type: "String",
                }, expiresAt: {
                    name: "expiresAt",
                    type: "DateTime",
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    isOptional: true,
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    isOptional: true,
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                },
            },
        },
        article: {
            name: 'Article', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, title: {
                    name: "title",
                    type: "String",
                }, content: {
                    name: "content",
                    type: "String",
                }, status: {
                    name: "status",
                    type: "ArticleStatus",
                    attributes: [{ "name": "@default", "args": [] }],
                }, visibility: {
                    name: "visibility",
                    type: "ArticleVisibility",
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@updatedAt", "args": [] }],
                }, authorId: {
                    name: "authorId",
                    type: "String",
                    attributes: [{ "name": "@default", "args": [] }],
                    defaultValueProvider: $default$Article$authorId,
                    isForeignKey: true,
                    relationField: 'author',
                }, author: {
                    name: "author",
                    type: "User",
                    isDataModel: true,
                    backLink: 'articles',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "authorId" },
                }, categories: {
                    name: "categories",
                    type: "ArticleCategory",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'articles',
                    isRelationOwner: true,
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                },
            },
        },
        articleCategory: {
            name: 'ArticleCategory', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, name: {
                    name: "name",
                    type: "String",
                }, articles: {
                    name: "articles",
                    type: "Article",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'categories',
                    isRelationOwner: true,
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@updatedAt", "args": [] }],
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                },
            },
        },

    },
    deleteCascade: {
        user: ['Account', 'Session'],

    },
    authModel: 'User'

};

function $default$Article$authorId(user: any): unknown {
    return user?.id;
}
export default metadata;
